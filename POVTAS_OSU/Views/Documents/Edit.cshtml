@model POVTAS_OSU.Models.Document

@{
    ViewBag.Title = "Edit";
    string oldFile = Model.File;
}

<h2>Документы</h2>

@using (Html.BeginForm(Html.BeginForm("Edit", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Редактирование</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <input type="hidden" name="oldFile" value="@oldFile" />

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label container-sm fw-bold" })
            <div class="container-sm">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DocumentType, htmlAttributes: new { @class = "control-label container-sm fw-bold" })
                <div class="container-sm">
                    @Html.EditorFor(model => model.DocumentType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DocumentType, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentDate, htmlAttributes: new { @class = "control-label container-sm fw-bold" })
            <div class="container-sm">
                @Html.EditorFor(model => model.DocumentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="control-label container-sm"><b>Тип документа</b></div>
            <div class="container-sm">
                @Html.DropDownList("DocumentTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DocumentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentNumber, htmlAttributes: new { @class = "control-label container-sm fw-bold" })
            <div class="container-sm">
                @Html.EditorFor(model => model.DocumentNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label container-sm fw-bold" })
            <div class="container-sm">
                @Html.EditorFor(model => model.File, new
                {
                    htmlAttributes = new
                    {
                        type = "file"
                    }
                })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.ChairId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.File, new { htmlAttributes = new { type = "file", required = "required" } })
                    @Html.ValidationMessageFor(model => model.ChairId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <input type="submit" value="Сохранить" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Index")
</div>
